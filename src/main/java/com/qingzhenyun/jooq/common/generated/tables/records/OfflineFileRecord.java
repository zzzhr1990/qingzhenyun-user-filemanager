/*
 * This file is generated by jOOQ.
*/
package com.qingzhenyun.jooq.common.generated.tables.records;


import com.qingzhenyun.jooq.common.generated.tables.OfflineFile;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfflineFileRecord extends UpdatableRecordImpl<OfflineFileRecord> implements Record4<String, String, String, Long> {

    private static final long serialVersionUID = -408155863;

    /**
     * Setter for <code>qzy_file_store.offline_file.task_id</code>.
     */
    public void setTaskId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>qzy_file_store.offline_file.task_id</code>.
     */
    public String getTaskId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>qzy_file_store.offline_file.task_hash</code>.
     */
    public void setTaskHash(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>qzy_file_store.offline_file.task_hash</code>.
     */
    public String getTaskHash() {
        return (String) get(1);
    }

    /**
     * Setter for <code>qzy_file_store.offline_file.file_hash</code>.
     */
    public void setFileHash(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>qzy_file_store.offline_file.file_hash</code>.
     */
    public String getFileHash() {
        return (String) get(2);
    }

    /**
     * Setter for <code>qzy_file_store.offline_file.add_time</code>.
     */
    public void setAddTime(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>qzy_file_store.offline_file.add_time</code>.
     */
    public Long getAddTime() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return OfflineFile.OFFLINE_FILE.TASK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return OfflineFile.OFFLINE_FILE.TASK_HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return OfflineFile.OFFLINE_FILE.FILE_HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return OfflineFile.OFFLINE_FILE.ADD_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getTaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTaskHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getFileHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getAddTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineFileRecord value1(String value) {
        setTaskId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineFileRecord value2(String value) {
        setTaskHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineFileRecord value3(String value) {
        setFileHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineFileRecord value4(Long value) {
        setAddTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineFileRecord values(String value1, String value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OfflineFileRecord
     */
    public OfflineFileRecord() {
        super(OfflineFile.OFFLINE_FILE);
    }

    /**
     * Create a detached, initialised OfflineFileRecord
     */
    public OfflineFileRecord(String taskId, String taskHash, String fileHash, Long addTime) {
        super(OfflineFile.OFFLINE_FILE);

        set(0, taskId);
        set(1, taskHash);
        set(2, fileHash);
        set(3, addTime);
    }
}
