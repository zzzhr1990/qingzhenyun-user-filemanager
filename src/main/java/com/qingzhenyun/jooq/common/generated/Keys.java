/*
 * This file is generated by jOOQ.
*/
package com.qingzhenyun.jooq.common.generated;


import com.qingzhenyun.jooq.common.generated.tables.OfflineFile;
import com.qingzhenyun.jooq.common.generated.tables.StoreFile;
import com.qingzhenyun.jooq.common.generated.tables.User;
import com.qingzhenyun.jooq.common.generated.tables.UserFile;
import com.qingzhenyun.jooq.common.generated.tables.records.OfflineFileRecord;
import com.qingzhenyun.jooq.common.generated.tables.records.StoreFileRecord;
import com.qingzhenyun.jooq.common.generated.tables.records.UserFileRecord;
import com.qingzhenyun.jooq.common.generated.tables.records.UserRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>qzy_file_store</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<OfflineFileRecord> KEY_OFFLINE_FILE_PRIMARY = UniqueKeys0.KEY_OFFLINE_FILE_PRIMARY;
    public static final UniqueKey<StoreFileRecord> KEY_STORE_FILE_PRIMARY = UniqueKeys0.KEY_STORE_FILE_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserFileRecord> KEY_USER_FILE_PRIMARY = UniqueKeys0.KEY_USER_FILE_PRIMARY;
    public static final UniqueKey<UserFileRecord> KEY_USER_FILE_IDX_SEARCH = UniqueKeys0.KEY_USER_FILE_IDX_SEARCH;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<UserRecord, Integer> IDENTITY_USER = createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<OfflineFileRecord> KEY_OFFLINE_FILE_PRIMARY = createUniqueKey(OfflineFile.OFFLINE_FILE, "KEY_offline_file_PRIMARY", OfflineFile.OFFLINE_FILE.TASK_ID);
        public static final UniqueKey<StoreFileRecord> KEY_STORE_FILE_PRIMARY = createUniqueKey(StoreFile.STORE_FILE, "KEY_store_file_PRIMARY", StoreFile.STORE_FILE.HASH);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.ID);
        public static final UniqueKey<UserFileRecord> KEY_USER_FILE_PRIMARY = createUniqueKey(UserFile.USER_FILE, "KEY_user_file_PRIMARY", UserFile.USER_FILE.ID);
        public static final UniqueKey<UserFileRecord> KEY_USER_FILE_IDX_SEARCH = createUniqueKey(UserFile.USER_FILE, "KEY_user_file_IDX_SEARCH", UserFile.USER_FILE.USER_ID, UserFile.USER_FILE.PARENT_ID);
    }
}
